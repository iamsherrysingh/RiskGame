	package Model;



	import java.io.BufferedReader;
	import java.io.File;
	import java.io.FileNotFoundException;
	import java.io.FileReader;
	import java.io.FileWriter;
	import java.io.IOException;
	import java.util.*;

	/**
	 * This file holds most of the logic of the game
	 */

public class DominationMapFile {

		private String continents;
		protected String countries;
		protected String borders;
		Database database = Database.getInstance();


		/**
		 * This reads the maps file and stores the country, continent and border details
		 * in their variables This is used by loadMap(). The variables generated by this
		 * method are used throughout the game.
		 *
		 * @param mapFile It is the name of the map file that is to be executed
		 * @throws FileNotFoundException Throws an exception if the file is not found
		 * @return true(If the method is executed completely)
		 */
		public boolean readMapIntoVariables(String mapFile) throws FileNotFoundException {
			  
			// Read Continents
			try (BufferedReader br = new BufferedReader(new FileReader(mapFile))) {
				StringBuilder sb = new StringBuilder();
				String line = br.readLine().trim();
				int continentsEncountered = 0;
				while (line != null) {
					if (line.equals("[countries]"))
						break;
					if (continentsEncountered == 1) {
						sb.append(line);
						sb.append(System.lineSeparator());
					}

					if (line.equals("[continents]")) {
						continentsEncountered = 1;
						sb.append(line);
						sb.append(System.lineSeparator());
					}
					line = br.readLine();
				}
				continents = sb.toString();
				continents = continents.trim();
				String continentLine[] = continents.split("\n");
				for (int i = 1; i < continentLine.length; i++) {
					continentLine[i] = continentLine[i].trim();
					String split[] = continentLine[i].split(" ");
					Continent continent = new Continent(Database.getInstance().getContinentList().size() + 1, split[0],
							Integer.parseInt(split[1]), split[2]);
					database.getContinentList().add(continent);
				}
			} catch (FileNotFoundException e) {

			} catch (IOException e) {

			} catch (Exception e) {

			}

			// Read countries
			try (BufferedReader br = new BufferedReader(new FileReader(mapFile))) {
				StringBuilder sb = new StringBuilder();
				String line = br.readLine();
				int countriesEncountered = 0;
				while (line != null) {
					if (line.equals("[borders]"))
						break;
					if (countriesEncountered == 1) {
						sb.append(line);
						sb.append(System.lineSeparator());
					}
					if (line.equals("[countries]")) {
						countriesEncountered = 1;
						sb.append(line);
						sb.append(System.lineSeparator());
					}
					line = br.readLine();
				}
				countries = sb.toString();
				countries = countries.trim();
			} catch (FileNotFoundException e) {

			} catch (IOException e) {

			} catch (Exception e) {

			}

			// Read Borders
			try {
				BufferedReader br = new BufferedReader(new FileReader(mapFile));
				StringBuilder sb = new StringBuilder();
				String line = br.readLine();
				int bordersEncountered = 0;
				while (line != null) {
					if (bordersEncountered == 1) {
						sb.append(line);
						sb.append(System.lineSeparator());
					}
					if (line.equals("[borders]")) {
						bordersEncountered = 1;
						sb.append(line);
						sb.append(System.lineSeparator());
					}
					line = br.readLine();
				}
				borders = sb.toString();
				borders = borders.trim();
			} catch (FileNotFoundException e) {

			} catch (IOException e) {

			} catch (Exception e) {

			}

			return true;
		}

}
